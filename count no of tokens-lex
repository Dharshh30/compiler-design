%{ 
int n = 0 ;  
%} 
%% 
"while"|"if"|"else"|"int"|"float"  {n++;printf("\t keywords : %s", yytext);}   
[a-zA-Z_][a-zA-Z0-9_]* {n++;printf("\t identifier : %s", yytext);} 
"<="|"=="|"="|"++"|"-"|"*"|"+" {n++;printf("\t operator : %s", yytext);}
[(){}|, ;]    {n++;printf("\t separator : %s", yytext);} 
[0-9]*"."[0-9]+ {n++;printf("\t float : %s", yytext);}  
[0-9]+ {n++;printf("\t integer : %s", yytext);}                        
.    ;
%% 
int yywrap(){
return 1;
}
int main() 
{ 
    yylex();
    printf("\n total no. of token = %d\n", n);   

}



output:
Microsoft Windows [Version 10.0.22621.1848]
(c) Microsoft Corporation. All rights reserved.

C:\Users\91730>cd compiler design

C:\Users\91730\compiler design>set path=C:\Users\91730\compiler design\GnuWin32\bin

C:\Users\91730\compiler design>flex tokens.l.txt

C:\Users\91730\compiler design>set path=C:\Users\91730\compiler design\MinGW\bin

C:\Users\91730\compiler design>gcc lex.yy.c

C:\Users\91730\compiler design>a
if it rains,i will get wet
         keywords : if   separator :     identifier : it         separator :     identifier : rains      separator : ,  identifier : i   separator :     identifier : will       separator :     identifier : get        separator :     identifier : wet
